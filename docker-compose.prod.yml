# Programming Assignments App
#
# Production configuration:
# services have restart policies
# persistance for postgres
#
volumes:
  astro_node_modules:
  postgres_data:

services:
  grader-image:
    build: ./grader-image
    image: grader-image

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - programming-api
      - programming-ui
    ports:
      - 80:7800
    # restart unless explicitly stopped
    restart: unless-stopped

  redis:
    image: redis/redis-stack:latest
    # I am using a different image from the starter
    # project. The image did not start properly unless
    # the command below was commented out.
    #command: redis-server /usr/local/etc/redis/redis.conf
    #volumes:
    #  - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    expose:
      - 6379

  programming-api:
    container_name: pap-programming-api
    build:
      context: programming-api
      dockerfile: Dockerfile.prod
    image: pap-programming-api-prod
    restart: "on-failure"
    expose:
      - 7777
    depends_on:
      - database
      - flyway
      - redis
      - grader-api
    env_file:
      - production.env
    deploy:
      # start the container on a failure
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

  programming-ui:
    container_name: pap-programming-ui
    build:
      context: programming-ui
      dockerfile: Dockerfile.prod
    image: pap-programming-ui-prod
    restart: "on-failure"
    volumes:
      - ./programming-ui/:/app
      - astro_node_modules:/app/node_modules
    expose:
      - 3000
    depends_on:
      - programming-api

  grader-api:
    build:
      context: grader-api
      dockerfile: Dockerfile.prod
    image: pap-grader-api-prod
    restart: "on-failure"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    expose:
      - 7000
    depends_on:
      - grader-image
    deploy:
      # We have two replicas of the grader-api service.
      # More replicas can be added if needed.
      replicas: 2
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

  database:
    container_name: pap-database-prod
    image: postgres:14.1
    # restart the container unless explicitly stopped
    restart: unless-stopped
    expose:
      - 5432
    # uses a named volume for persistence
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - production.env

  flyway:
    image: flyway/flyway:9.11.0-alpine
    depends_on:
      - database
    volumes:
      - ./flyway/sql/:/flyway/sql
    command: -connectRetries=60 -baselineOnMigrate=true migrate
    env_file:
      - production.env

  # e2e-playwright not needed in production
